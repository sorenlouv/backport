// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when a multiple commits are backported should make correct API requests 1`] = `
Object {
  "query": "
    query getIdByLogin($login: String!) {
      user(login: $login) {
        id
      }
    }
  ",
  "variables": Object {
    "login": "sqren",
  },
}
`;

exports[`when a multiple commits are backported should make correct API requests 2`] = `
Object {
  "query": "
    query getCommitsByAuthorQuery(
      $repoOwner: String!
      $repoName: String!
      $commitsCount: Int!
      $sourceBranch: String!
      $authorId: ID
      $historyPath: String
    ) {
      repository(owner: $repoOwner, name: $repoName) {
        ref(qualifiedName: $sourceBranch) {
          target {
            ... on Commit {
              history(
                first: $commitsCount
                author: { id: $authorId }
                path: $historyPath
              ) {
                edges {
                  node {
                    oid
                    message
                    associatedPullRequests(first: 1) {
                      edges {
                        node {
                          repository {
                            owner {
                              login
                            }
                            name
                          }
                          number
                          timelineItems(
                            last: 20
                            itemTypes: CROSS_REFERENCED_EVENT
                          ) {
                            edges {
                              node {
                                ... on CrossReferencedEvent {
                                  source {
                                    __typename
                                    ... on PullRequest {
                                      title
                                      state
                                      baseRefName
                                      commits(first: 20) {
                                        edges {
                                          node {
                                            commit {
                                              message
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ",
  "variables": Object {
    "authorId": "sqren_author_id",
    "commitsCount": 10,
    "historyPath": null,
    "repoName": "backport-demo",
    "repoOwner": "elastic",
    "sourceBranch": "master",
  },
}
`;

exports[`when a multiple commits are backported should make correct API requests 3`] = `
Object {
  "base": "6.0",
  "body": "Backports the following commits to 6.0:
 - Add witch (#85)
 - Add ðŸ‘» (2e63475c)",
  "head": "sqren:backport/6.0/pr-85_commit-2e63475c",
  "title": "[6.0] Add witch (#85) | Add ðŸ‘» (2e63475c)",
}
`;

exports[`when a single commit is backported should make correct API requests 1`] = `
Object {
  "query": "
    query getDefaultBranch($repoOwner: String!, $repoName: String!) {
      repository(owner: $repoOwner, name: $repoName) {
        defaultBranchRef {
          name
        }
      }
    }
  ",
  "variables": Object {
    "repoName": "backport-demo",
    "repoOwner": "elastic",
  },
}
`;

exports[`when a single commit is backported should make correct API requests 2`] = `
Object {
  "query": "
    query getIdByLogin($login: String!) {
      user(login: $login) {
        id
      }
    }
  ",
  "variables": Object {
    "login": "sqren",
  },
}
`;

exports[`when a single commit is backported should make correct API requests 3`] = `
Object {
  "query": "
    query getCommitsByAuthorQuery(
      $repoOwner: String!
      $repoName: String!
      $commitsCount: Int!
      $sourceBranch: String!
      $authorId: ID
      $historyPath: String
    ) {
      repository(owner: $repoOwner, name: $repoName) {
        ref(qualifiedName: $sourceBranch) {
          target {
            ... on Commit {
              history(
                first: $commitsCount
                author: { id: $authorId }
                path: $historyPath
              ) {
                edges {
                  node {
                    oid
                    message
                    associatedPullRequests(first: 1) {
                      edges {
                        node {
                          repository {
                            owner {
                              login
                            }
                            name
                          }
                          number
                          timelineItems(
                            last: 20
                            itemTypes: CROSS_REFERENCED_EVENT
                          ) {
                            edges {
                              node {
                                ... on CrossReferencedEvent {
                                  source {
                                    __typename
                                    ... on PullRequest {
                                      title
                                      state
                                      baseRefName
                                      commits(first: 20) {
                                        edges {
                                          node {
                                            commit {
                                              message
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ",
  "variables": Object {
    "authorId": "sqren_author_id",
    "commitsCount": 10,
    "historyPath": null,
    "repoName": "backport-demo",
    "repoOwner": "elastic",
    "sourceBranch": "master",
  },
}
`;

exports[`when a single commit is backported should make correct API requests 4`] = `
Object {
  "base": "6.0",
  "body": "Backports the following commits to 6.0:
 - Add witch (#85)",
  "head": "sqren:backport/6.0/pr-85",
  "title": "[6.0] Add witch (#85)",
}
`;
