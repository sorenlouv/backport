// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fetchCommitsByAuthor when commit has an associated pull request should call with correct args to fetch author id 1`] = `
Array [
  Object {
    "query": "
    query AuthorId($login: String!) {
      user(login: $login) {
        id
      }
    }
  ",
    "variables": Object {
      "login": "sqren",
    },
  },
]
`;

exports[`fetchCommitsByAuthor when commit has an associated pull request should call with correct args to fetch commits 1`] = `
Array [
  Object {
    "query": "
    query CommitsByAuthor(
      $repoOwner: String!
      $repoName: String!
      $maxNumber: Int!
      $sourceBranch: String!
      $authorId: ID
      $historyPath: String
    ) {
      repository(owner: $repoOwner, name: $repoName) {
        ref(qualifiedName: $sourceBranch) {
          target {
            ... on Commit {
              history(
                first: $maxNumber
                author: { id: $authorId }
                path: $historyPath
              ) {
                edges {
                  node {
                    oid
                    message
                    associatedPullRequests(first: 1) {
                      edges {
                        node {
                          ...ExistingTargetPullRequests
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    
  fragment ExistingTargetPullRequests on PullRequest {
    # Source PR
    number
    repository {
      name
      owner {
        login
      }
    }
    mergeCommit {
      oid
      message
    }
    labels(first: 50) {
      nodes {
        name
      }
    }
    baseRefName
    timelineItems(last: 20, itemTypes: CROSS_REFERENCED_EVENT) {
      edges {
        node {
          ... on CrossReferencedEvent {
            source {
              __typename

              # Target PRs
              ... on PullRequest {
                title
                state
                baseRefName
                commits(first: 20) {
                  edges {
                    node {
                      commit {
                        message
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  ",
    "variables": Object {
      "authorId": "myUserId",
      "historyPath": null,
      "maxNumber": 10,
      "repoName": "kibana",
      "repoOwner": "elastic",
      "sourceBranch": "master",
    },
  },
]
`;
