// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fetchCommitsByAuthor when commit has an associated pull request should call with correct args to fetch author id 1`] = `
Array [
  Object {
    "query": "
    query AuthorId($login: String!) {
      user(login: $login) {
        id
      }
    }
  ",
    "variables": Object {
      "login": "sqren",
    },
  },
]
`;

exports[`fetchCommitsByAuthor when commit has an associated pull request should call with correct args to fetch commits 1`] = `
Array [
  Object {
    "query": "
    query CommitsByAuthor(
      $repoOwner: String!
      $repoName: String!
      $maxNumber: Int!
      $sourceBranch: String!
      $authorId: ID
      $commitPath: String
    ) {
      repository(owner: $repoOwner, name: $repoName) {
        ref(qualifiedName: $sourceBranch) {
          target {
            ... on Commit {
              history(
                first: $maxNumber
                author: { id: $authorId }
                path: $commitPath
              ) {
                edges {
                  node {
                    ...SourceCommitWithTargetPullRequest
                  }
                }
              }
            }
          }
        }
      }
    }

    
    fragment InnerCommitNode on Commit {
      repository {
        name
        owner {
          login
        }
      }
      oid
      message
      committedDate
    }

    fragment SourceCommitWithTargetPullRequest on Commit {
      ...InnerCommitNode
      associatedPullRequests(first: 1) {
        edges {
          node {
            # Source PR
            number
            labels(first: 50) {
              nodes {
                name
              }
            }
            baseRefName
            timelineItems(last: 20, itemTypes: CROSS_REFERENCED_EVENT) {
              edges {
                node {
                  ... on CrossReferencedEvent {
                    targetPullRequest: source {
                      __typename

                      # Target PRs
                      ... on PullRequest {
                        title
                        state
                        baseRefName
                        number
                        commits(first: 20) {
                          edges {
                            node {
                              targetCommit: commit {
                                ...InnerCommitNode
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  
  ",
    "variables": Object {
      "authorId": "myUserId",
      "commitPath": null,
      "maxNumber": 10,
      "repoName": "kibana",
      "repoOwner": "elastic",
      "sourceBranch": "source-branch-from-options",
    },
  },
]
`;
